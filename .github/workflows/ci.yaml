name: Eve-Admin CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build-n-push:
    env:
      GOOS: linux
      GOARCH: amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.6'
      - run: go version

      - name: Use Node.js 15
        uses: actions/setup-node@v1
        with:
            node-version: '15.x'      

      - name: Cache node modules
        uses: actions/cache@v2
        env:
            cache-name: cache-node-modules
        with:
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                ${{ runner.os }}-build-${{ env.cache-name }}-
                ${{ runner.os }}-build-
                ${{ runner.os }}-            

      - name: Set variables ✨
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
          TS=$(date -u +%F_%TUTC)
          echo "BUILD_TIME=$TS" >> $GITHUB_ENV

      - name: Install Dependencies
        if: ${{ contains(github.ref, 'master') }}
        run: | 
          cd client
          npm install
          run: npm run build:prod

      - name: Test & Build 🧠
        run: |
          go get ./...
          go test ./... -v -race
          mkdir bin
          CGO_ENABLED=0 go build -ldflags="-X 'github.com/unanet/eve-admin/internal/handler.Version=${{ env.VERSION }}.${{ github.run_number }}'" -o ./bin/eve-admin ./cmd/eve-admin/main.go

      - name: Set up Docker Buildx 🐳
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Cache Docker layers 🐳
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Check SemVer Tag 🖖
        run: |
          echo "${{ env.VERSION }}"
          make check_version

      - name: Docker Image 🐳
        if: ${{ contains(github.ref, 'master') }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            unanet/eve-admin:latest
            unanet/eve-admin:${{ env.VERSION }}